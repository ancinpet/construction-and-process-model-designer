{"version":3,"sources":["webpack:///./node_modules/d3-scale/node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-scale/node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-scale/node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-scale/node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-scale/node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-scale/node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-scale/node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/formatDefault.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js"],"names":["ascending","a","b","NaN","bisector","compare","f","length","d","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","array_array","Array","prototype","src_range","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","e10","sqrt","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","Map","map_map","object","each","value","key","set","isArray","o","constructor","has","this","get","remove","property","clear","keys","push","values","entries","size","empty","src_map","Set","proto","add","src_array_array","array_map","array_slice","implicit","name","ordinal","index","domain","unknown","scale","call","_","copy","band","bandwidth","undefined","ordinalRange","round","paddingInner","paddingOuter","align","rescale","rangeRound","padding","min","point","pointish","src_constant","src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","d1","r0","r1","polymap","j","r","source","target","interpolate","clamp","continuous","piecewise","output","input","d3_interpolate","deinterpolateClamp","invert","y","t","reinterpolateClamp","prefixExponent","formatDecimal","p","toExponential","indexOf","coefficient","src_exponent","formatRounded","exponent","join","formatTypes","","toPrecision","out","i1","i0","%","toFixed","toString","c","e","g","s","X","toUpperCase","re","formatSpecifier","specifier","FormatSpecifier","match","exec","Error","fill","sign","symbol","zero","width","comma","precision","type","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","src_identity","prefixes","locale","grouping","thousands","group","substring","currency","decimal","numerals","replace","formatNumerals","percent","newFormat","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","format","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","k","src_locale","src_tickFormat","isNaN","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear","interval","x0","x1","t0","Date","t1","newInterval","floori","offseti","field","date","offset","filter","setTime","end","every","millisecond_millisecond","src_millisecond","durationMinute","durationWeek","second_second","getUTCSeconds","minute_minute","getMinutes","hour_hour","getTimezoneOffset","getHours","src_hour","day_day","setHours","setDate","getDate","src_day","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","src_month","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","src_utcYear","localDate","m","H","M","S","L","utcDate","UTC","newYear","src_defaultLocale_locale","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","pad","string","requote","formatRe","names","RegExp","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","u","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","getMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","getSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","z","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","src_utcDay","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","definition","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","A","B","I","Y","utcFormats","parses","parseSpecifier","charAt","newParse","newDate","week","parse","formatLocale","defaultLocale_defaultLocale","toISOString","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_minute","src_second","number","variance","valueof","delta","mean","sum","deviation","array","v","extent","sturges","LN2","quantile","value0","src_max","src_min","src_transpose","matrix","transpose_length","transpose","row","define","factory","extend","parent","Object","create","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","trim","Rgb","parseInt","rgbn","rgba","hsla","hasOwnProperty","rgbConvert","rgb","opacity","h","l","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t2","t3","labConvert","Lab","Hcl","cos","sin","rgb2xyz","xyz2lab","lab","lab2xyz","xyz2rgb","hcl","atan2","hclConvert","C","D","E","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","cosh","sinh","basis","v0","v1","v2","v3","src_basis","basisClosed","constant","color_hue","gamma","nogamma","exponential","rgbGamma","d3_color","rgbSpline","spline","colors","nb","na","src_value","reA","reB","cssNode","cssRoot","cssView","svgNode","am","bm","bs","bi","lastIndex","q","one","src_rgb","valueOf","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","interpolateTransformCss","document","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","interpolateTransformSvg","createElementNS","setAttribute","baseVal","consolidate","rho","SQRT2","exp","zoom","p0","p1","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","b0","b1","coshr0","duration","hue","cubehelix_cubehelix","cubehelixGamma"],"mappings":"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","file":"js/248.ad897482.chunk.js","sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDefault from \"./formatDefault\";\nimport formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}\n","import formatTypes from \"./formatTypes\";\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n","export default function(x) {\n  return x;\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar Kn = 18,\n    Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n"],"sourceRoot":""}