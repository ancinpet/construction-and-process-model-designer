{"version":3,"sources":["webpack:///./src/main/js/apps/account/organizations/OrganizationCard.tsx","webpack:///./src/main/js/apps/account/organizations/OrganizationsList.tsx","webpack:///./src/main/js/apps/account/organizations/UserOrganizations.tsx"],"names":["OrganizationCard","_a","organization","index_js_exposed","className","Object","l10n","key","OrganizationAvatar","OrganizationLink","name","isAdmin","description","url","href","rel","title","OrganizationsList","organizations","length","sortBy_default","toLocaleLowerCase","map","UserOrganizations_UserOrganizations","_super","UserOrganizations","_this","apply","this","arguments","mounted","state","loading","stopLoading","setState","__extends","prototype","componentDidMount","props","fetchIfAnyoneCanCreateOrganizations","then","componentWillUnmount","render","anyoneCanCreate","value","canCreateOrganizations","canAdmin","Helmet_default","a","react_router_es","to","mapDispatchToProps","actions","__webpack_exports__","es","rootReducer"],"mappings":"iMA6Bc,SAAUA,EAAiBC,OAAEC,EAAAD,EAAAC,aACzC,OACEC,EAAA,qBAAKC,UAAU,iCACbD,EAAA,uBAAOC,UAAU,6BACfD,EAAA,4BAASE,OAAAC,EAAA,EAAAD,CAAU,oBAA8B,SAAEH,EAAaK,KAGlEJ,EAAA,oBAAIC,UAAU,wBACZD,EAAA,cAACK,EAAA,GAAmBN,aAAcA,IAClCC,EAAA,cAACM,EAAA,GAAiBL,UAAU,0BAA0BF,aAAcA,GACjEA,EAAaQ,MAEfR,EAAaS,SACZR,EAAA,sBAAMC,UAAU,6BAA6BC,OAAAC,EAAA,EAAAD,CAAU,aAIxDH,EAAaU,aACdT,EAAA,qBAAKC,UAAU,uBAAuBF,EAAaU,eAGlDV,EAAaW,KACdV,EAAA,qBAAKC,UAAU,uBACbD,EAAA,mBAAGW,KAAMZ,EAAaW,IAAKE,IAAI,WAAWC,MAAOd,EAAaW,KAC3DX,EAAaW,OCxBZ,SAAUI,EAAkBhB,OAAEiB,EAAAjB,EAAAiB,cAC1C,OAA6B,IAAzBA,EAAcC,OACThB,EAAA,yBAAME,OAAAC,EAAA,EAAAD,CAAU,wCAIvBF,EAAA,oBAAIC,UAAU,yBACXgB,IAAOF,EAAe,SAAAhB,GAAgB,OAAAA,EAAaQ,KAAbW,sBAAuCC,IAC5E,SAAApB,GAAgB,OACdC,EAAA,oBAAII,IAAKL,EAAaK,KACpBJ,EAAA,cAACH,GAAiBE,aAFNA,qVCaxBqB,EAAA,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAAI,SAAU,EACVJ,EAAAK,OAAiBC,SAAS,GAW1BN,EAAAO,YAAc,WACRP,EAAKI,SACPJ,EAAKQ,UAAWF,SAAS,OAmC/B,OAlDgCG,EAAAV,EAAAD,GAI9BC,EAAAW,UAAAC,kBAAA,WACET,KAAKE,SAAU,EACfF,KAAKU,MAAMC,sCAAsCC,KAAKZ,KAAKK,YAAaL,KAAKK,cAG/ER,EAAAW,UAAAK,qBAAA,WACEb,KAAKE,SAAU,GASjBL,EAAAW,UAAAM,OAAA,WACE,IAAMC,EAC0B,MAA9Bf,KAAKU,MAAMK,iBAAgE,SAArCf,KAAKU,MAAMK,gBAAgBC,MAE7DC,GAA0BjB,KAAKG,MAAMC,UAAYW,GAAmBf,KAAKU,MAAMQ,UAErF,OACE3C,EAAA,qBAAKC,UAAU,kCACbD,EAAA,cAAC4C,EAAAC,GAAOhC,MAAOX,OAAAC,EAAA,EAAAD,CAAU,8BAEzBF,EAAA,qBAAKC,UAAU,eACZyC,GACC1C,EAAA,qBAAKC,UAAU,YACbD,EAAA,qBAAKC,UAAU,uBACbD,EAAA,cAAC8C,EAAA,MAAK7C,UAAU,SAAS8C,GAAG,wBACzB7C,OAAAC,EAAA,EAAAD,CAAU,aAKnBF,EAAA,qBAAKC,UAAU,qBACZwB,KAAKG,MAAMC,QACV7B,EAAA,mBAAGC,UAAU,YAEbD,EAAA,cAACc,GAAkBC,cAAeU,KAAKU,MAAMpB,oBAO3DO,EAlDA,CAAgCtB,EAAA,eA0D1BgD,GACJZ,oCAAqCa,EAAA,GAGvCC,EAAA,QAAehD,OAAAiD,EAAA,QAAAjD,CAVS,SAAC0B,GAA6B,OACpDY,gBAAiBtC,OAAAkD,EAAA,sBAAAlD,CAAsB0B,EAAO,uCAC9Ce,SAAUzC,OAAAkD,EAAA,YAAAlD,CAAY0B,GAAOe,SAC7B5B,cAAeb,OAAAkD,EAAA,mBAAAlD,CAAmB0B,KASlCoB,EAFF,CAGE5B","file":"js/334.2bf54345.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport OrganizationLink from '../../../components/ui/OrganizationLink';\nimport { translate } from '../../../helpers/l10n';\nimport { Organization } from '../../../app/types';\n\ninterface Props {\n  organization: Organization;\n}\n\nexport default function OrganizationCard({ organization }: Props) {\n  return (\n    <div className=\"account-project-card clearfix\">\n      <aside className=\"account-project-side note\">\n        <strong>{translate('organization.key')}:</strong> {organization.key}\n      </aside>\n\n      <h3 className=\"account-project-name\">\n        <OrganizationAvatar organization={organization} />\n        <OrganizationLink className=\"spacer-left text-middle\" organization={organization}>\n          {organization.name}\n        </OrganizationLink>\n        {organization.isAdmin && (\n          <span className=\"outline-badge spacer-left\">{translate('admin')}</span>\n        )}\n      </h3>\n\n      {!!organization.description && (\n        <div className=\"markdown spacer-top\">{organization.description}</div>\n      )}\n\n      {!!organization.url && (\n        <div className=\"markdown spacer-top\">\n          <a href={organization.url} rel=\"nofollow\" title={organization.url}>\n            {organization.url}\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport OrganizationCard from './OrganizationCard';\nimport { Organization } from '../../../app/types';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  organizations: Organization[];\n}\n\nexport default function OrganizationsList({ organizations }: Props) {\n  if (organizations.length === 0) {\n    return <div>{translate('my_account.organizations.no_results')}</div>;\n  }\n\n  return (\n    <ul className=\"account-projects-list\">\n      {sortBy(organizations, organization => organization.name.toLocaleLowerCase()).map(\n        organization => (\n          <li key={organization.key}>\n            <OrganizationCard organization={organization} />\n          </li>\n        )\n      )}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport OrganizationsList from './OrganizationsList';\nimport { fetchIfAnyoneCanCreateOrganizations } from './actions';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  getAppState,\n  getMyOrganizations,\n  getGlobalSettingValue,\n  Store\n} from '../../../store/rootReducer';\nimport { Organization } from '../../../app/types';\n\ninterface StateProps {\n  anyoneCanCreate?: { value: string };\n  canAdmin?: boolean;\n  organizations: Organization[];\n}\n\ninterface DispatchProps {\n  fetchIfAnyoneCanCreateOrganizations: () => Promise<void>;\n}\n\ninterface Props extends StateProps, DispatchProps {}\n\ninterface State {\n  loading: boolean;\n}\n\nclass UserOrganizations extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchIfAnyoneCanCreateOrganizations().then(this.stopLoading, this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const anyoneCanCreate =\n      this.props.anyoneCanCreate != null && this.props.anyoneCanCreate.value === 'true';\n\n    const canCreateOrganizations = !this.state.loading && (anyoneCanCreate || this.props.canAdmin);\n\n    return (\n      <div className=\"account-body account-container\">\n        <Helmet title={translate('my_account.organizations')} />\n\n        <div className=\"boxed-group\">\n          {canCreateOrganizations && (\n            <div className=\"clearfix\">\n              <div className=\"boxed-group-actions\">\n                <Link className=\"button\" to=\"/create-organization\">\n                  {translate('create')}\n                </Link>\n              </div>\n            </div>\n          )}\n          <div className=\"boxed-group-inner\">\n            {this.state.loading ? (\n              <i className=\"spinner\" />\n            ) : (\n              <OrganizationsList organizations={this.props.organizations} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  anyoneCanCreate: getGlobalSettingValue(state, 'sonar.organizations.anyoneCanCreate'),\n  canAdmin: getAppState(state).canAdmin,\n  organizations: getMyOrganizations(state)\n});\n\nconst mapDispatchToProps = {\n  fetchIfAnyoneCanCreateOrganizations: fetchIfAnyoneCanCreateOrganizations as any\n} as DispatchProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserOrganizations);\n"],"sourceRoot":""}