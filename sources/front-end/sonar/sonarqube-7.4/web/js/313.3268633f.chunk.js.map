{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/OrganizationPageExtension.tsx","webpack:///./src/main/js/app/components/SimpleContainer.tsx","webpack:///./src/main/js/app/components/NotFound.tsx","webpack:///./src/main/js/app/components/extensions/Extension.tsx","webpack:///./src/main/js/app/components/extensions/ExtensionContainer.tsx","webpack:///./src/main/js/apps/organizations/actions.ts"],"names":["OrganizationPageExtension","_super","_this","apply","this","arguments","refreshOrganization","props","organization","fetchOrganization","key","__extends","prototype","render","_a","params","extensionKey","pluginKey","pages","canAdmin","adminPages","concat","extension","find","p","react__WEBPACK_IMPORTED_MODULE_0__","_ExtensionContainer__WEBPACK_IMPORTED_MODULE_2__","options","_NotFound__WEBPACK_IMPORTED_MODULE_3__","withContainer","mapDispatchToProps","_apps_organizations_actions__WEBPACK_IMPORTED_MODULE_5__","__webpack_exports__","Object","react_redux__WEBPACK_IMPORTED_MODULE_1__","state","ownProps","_store_rootReducer__WEBPACK_IMPORTED_MODULE_4__","organizationKey","_components_nav_NavBar__WEBPACK_IMPORTED_MODULE_3__","__webpack_require__","SimpleContainer","children","className","id","height","_theme__WEBPACK_IMPORTED_MODULE_2__","_GlobalFooterContainer__WEBPACK_IMPORTED_MODULE_1__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","NotFound","_b","Container","_SimpleContainer__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","defaultTitle","defer","react_router__WEBPACK_IMPORTED_MODULE_2__","to","Extension_Extension","Extension","handleStart","start","store","getStore","stop","__assign","el","container","currentUser","intl","location","router","suggestions","context","handleFailure","onFail","l10n","componentDidMount","startExtension","componentDidUpdate","prevProps","stopExtension","componentWillUnmount","utils","then","undefined","index_js_exposed","Helmet_default","a","title","name","ref","contextTypes","prop_types","isRequired","extensions_Extension","index_es","react_router_es","es","rootReducer","dispatch","Promise","all","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","navigation","organizationWithPermissions","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","updateOrganization","changes","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","deleteOrganization"],"mappings":"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","file":"js/313.3268633f.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ExtensionContainer from './ExtensionContainer';\nimport NotFound from '../NotFound';\nimport { getOrganizationByKey, Store } from '../../../store/rootReducer';\nimport { fetchOrganization } from '../../../apps/organizations/actions';\nimport { Organization } from '../../types';\n\ninterface StateToProps {\n  organization?: Organization;\n}\n\ninterface DispatchProps {\n  fetchOrganization: (organizationKey: string) => void;\n}\n\ninterface OwnProps {\n  location: {};\n  params: {\n    extensionKey: string;\n    organizationKey: string;\n    pluginKey: string;\n  };\n}\n\ntype Props = OwnProps & StateToProps & DispatchProps;\n\nclass OrganizationPageExtension extends React.PureComponent<Props> {\n  refreshOrganization = () =>\n    this.props.organization && this.props.fetchOrganization(this.props.organization.key);\n\n  render() {\n    const { extensionKey, pluginKey } = this.props.params;\n    const { organization } = this.props;\n\n    if (!organization) {\n      return null;\n    }\n\n    let pages = organization.pages || [];\n    if (organization.canAdmin && organization.adminPages) {\n      pages = pages.concat(organization.adminPages);\n    }\n\n    const extension = pages.find(p => p.key === `${pluginKey}/${extensionKey}`);\n    return extension ? (\n      <ExtensionContainer\n        extension={extension}\n        options={{ organization, refreshOrganization: this.refreshOrganization }}\n      />\n    ) : (\n      <NotFound withContainer={false} />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps) => ({\n  organization: getOrganizationByKey(state, ownProps.params.organizationKey)\n});\n\nconst mapDispatchToProps = { fetchOrganization };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrganizationPageExtension);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport GlobalFooterContainer from './GlobalFooterContainer';\nimport * as theme from '../theme';\nimport NavBar from '../../components/nav/NavBar';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default function SimpleContainer({ children }: Props) {\n  return (\n    <div className=\"global-container\">\n      <div className=\"page-wrapper\" id=\"container\">\n        <NavBar className=\"navbar-global\" height={theme.globalNavHeightRaw} />\n        {children}\n      </div>\n      <GlobalFooterContainer />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router';\nimport SimpleContainer from './SimpleContainer';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  withContainer?: boolean;\n}\n\nexport default function NotFound({ withContainer = true }: Props) {\n  const Container = withContainer ? SimpleContainer : React.Fragment;\n  return (\n    <Container>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('page_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('address_mistyped_or_page_moved')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as PropTypes from 'prop-types';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { injectIntl, InjectedIntlProps } from 'react-intl';\nimport { getExtensionStart } from './utils';\nimport { translate } from '../../../helpers/l10n';\nimport getStore from '../../utils/getStore';\nimport { CurrentUser } from '../../types';\n\ninterface OwnProps {\n  currentUser: CurrentUser;\n  extension: { key: string; name: string };\n  onFail: (message: string) => void;\n  options?: {};\n}\n\ntype Props = OwnProps & WithRouterProps & InjectedIntlProps;\n\nclass Extension extends React.PureComponent<Props> {\n  container?: HTMLElement | null;\n  stop?: Function;\n\n  static contextTypes = {\n    suggestions: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    this.startExtension();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.extension !== this.props.extension) {\n      this.stopExtension();\n      this.startExtension();\n    } else if (prevProps.location !== this.props.location) {\n      this.startExtension();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopExtension();\n  }\n\n  handleStart = (start: Function) => {\n    const store = getStore();\n    this.stop = start({\n      store,\n      el: this.container,\n      currentUser: this.props.currentUser,\n      intl: this.props.intl,\n      location: this.props.location,\n      router: this.props.router,\n      suggestions: this.context.suggestions,\n      ...this.props.options\n    });\n  };\n\n  handleFailure = () => {\n    this.props.onFail(translate('page_extension_failed'));\n  };\n\n  startExtension() {\n    const { extension } = this.props;\n    getExtensionStart(extension.key).then(this.handleStart, this.handleFailure);\n  }\n\n  stopExtension() {\n    if (this.stop) {\n      this.stop();\n      this.stop = undefined;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Helmet title={this.props.extension.name} />\n        <div ref={container => (this.container = container)} />\n      </div>\n    );\n  }\n}\n\nexport default injectIntl<OwnProps>(withRouter<OwnProps & InjectedIntlProps>(Extension));\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport Extension from './Extension';\nimport { getCurrentUser, Store } from '../../../store/rootReducer';\nimport { addGlobalErrorMessage } from '../../../store/globalMessages';\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps = { onFail: addGlobalErrorMessage };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Extension);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport { Organization, OrganizationBase } from '../../app/types';\nimport { Store } from '../../store/rootReducer';\n\nexport const fetchOrganization = (key: string) => (dispatch: Dispatch<Store>) => {\n  return Promise.all([api.getOrganization(key), api.getOrganizationNavigation(key)]).then(\n    ([organization, navigation]) => {\n      if (organization) {\n        const organizationWithPermissions = { ...organization, ...navigation };\n        dispatch(actions.receiveOrganizations([organizationWithPermissions]));\n      }\n    }\n  );\n};\n\nexport const createOrganization = (organization: OrganizationBase) => (\n  dispatch: Dispatch<Store>\n) => {\n  return api.createOrganization(organization).then((organization: Organization) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  });\n};\n\nexport const updateOrganization = (key: string, changes: OrganizationBase) => (\n  dispatch: Dispatch<Store>\n) => {\n  return api.updateOrganization(key, changes).then(() => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  });\n};\n\nexport const deleteOrganization = (key: string) => (dispatch: Dispatch<Store>) => {\n  return api.deleteOrganization(key).then(() => {\n    dispatch(actions.deleteOrganization(key));\n    dispatch(addGlobalSuccessMessage(translate('organization.deleted')));\n  });\n};\n"],"sourceRoot":""}