{"version":3,"sources":["webpack:///./src/main/js/apps/projectDeletion/Header.tsx","webpack:///./src/main/js/apps/projectDeletion/Form.tsx","webpack:///./src/main/js/apps/projectDeletion/App.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx"],"names":["Header","props","description","qualifier","component","includes","Object","l10n","index_js_exposed","className","projectDeletion_Form","es","_super","Form","_this","apply","this","arguments","handleDelete","isProject","deleteMethod","components","redirectTo","key","then","router","replace","__extends","prototype","render","ConfirmButton","confirmButtonText","isDestructive","modalBody","name","modalHeader","onConfirm","_a","onClick","buttons","id","App","Helmet_default","a","title","__webpack_require__","d","__webpack_exports__","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","__assign","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-medium","medium","modal-large","large","isOpen","overlayClassName","SimpleModal","mounted","state","submitting","stopSubmitting","setState","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","componentDidMount","componentWillUnmount","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","header","onRequestClose","children","onCloseClick","onFormSubmit","onSubmitClick","ModalButton","modal","handleButtonClick","handleCloseModal","ConfirmModal","handleSubmit","confirmData","renderModalContent","_b","confirmDisable","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","autoFocus","undefined","disabled","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","renderConfirmModal","_ConfirmModal__WEBPACK_IMPORTED_MODULE_2__","_ModalButton__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"js/364.7a7832d1.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\nimport { Component } from '../../app/types';\n\ninterface Props {\n  component: Pick<Component, 'qualifier'>;\n}\n\nexport default function Header(props: Props) {\n  const { qualifier } = props.component;\n  let description: string;\n  if (['VW', 'SVW'].includes(qualifier)) {\n    description = translate('portfolio_deletion.page.description');\n  } else if (qualifier === 'APP') {\n    description = translate('application_deletion.page.description');\n  } else {\n    description = translate('project_deletion.page.description');\n  }\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('deletion.page')}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { deleteProject, deletePortfolio } from '../../api/components';\nimport { Button } from '../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport { Component } from '../../app/types';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\n\ninterface Props {\n  component: Pick<Component, 'key' | 'name' | 'qualifier'>;\n}\n\nexport default withRouter(\n  class Form extends React.PureComponent<Props & WithRouterProps> {\n    handleDelete = () => {\n      const { component } = this.props;\n      const isProject = component.qualifier === 'TRK';\n      const deleteMethod = isProject ? deleteProject : deletePortfolio;\n      const redirectTo = isProject ? '/' : '/portfolios';\n      return deleteMethod(component.key).then(() => {\n        this.props.router.replace(redirectTo);\n      });\n    };\n\n    render() {\n      const { component } = this.props;\n      return (\n        <ConfirmButton\n          confirmButtonText={translate('delete')}\n          isDestructive={true}\n          modalBody={translateWithParameters(\n            'project_deletion.delete_resource_confirmation',\n            component.name\n          )}\n          modalHeader={translate('qualifier.delete', component.qualifier)}\n          onConfirm={this.handleDelete}>\n          {({ onClick }) => (\n            <Button className=\"button-red\" id=\"delete-project\" onClick={onClick}>\n              {translate('delete')}\n            </Button>\n          )}\n        </ConfirmButton>\n      );\n    }\n  }\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './Header';\nimport Form from './Form';\nimport { Component } from '../../app/types';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<Component, 'key' | 'name' | 'qualifier'>;\n}\n\nexport default function App(props: Props) {\n  return (\n    <div className=\"page page-limited\">\n      <Helmet title={translate('deletion.page')} />\n      <Header component={props.component} />\n      <Form component={props.component} />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\ninterface OwnProps {\n  medium?: boolean;\n  large?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & OwnProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', { 'modal-medium': props.medium, 'modal-large': props.large })}\n      isOpen={true}\n      overlayClassName=\"modal-overlay\"\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\n\ninterface Props<T> {\n  children: React.ReactNode;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  header: string;\n  isDestructive?: boolean;\n  onClose: () => void;\n  onConfirm: (data?: T) => void | Promise<void>;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const { children, confirmButtonText, confirmDisable, header, isDestructive } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {translate('cancel')}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header } = this.props;\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\nimport ConfirmModal from './ConfirmModal';\n\nexport { ChildrenProps } from './ModalButton';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  confirmButtonText: string;\n  confirmData?: string;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  onConfirm: (data?: string) => void | Promise<void>;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton extends React.PureComponent<Props, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    return (\n      <ConfirmModal\n        confirmButtonText={this.props.confirmButtonText}\n        confirmData={this.props.confirmData}\n        confirmDisable={this.props.confirmDisable}\n        header={this.props.modalHeader}\n        isDestructive={this.props.isDestructive}\n        onClose={onClose}\n        onConfirm={this.props.onConfirm}>\n        {this.props.modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n"],"sourceRoot":""}