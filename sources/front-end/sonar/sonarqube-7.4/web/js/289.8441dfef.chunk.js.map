{"version":3,"sources":["webpack:///./src/main/js/components/common/StatusIndicator.css","webpack:///./src/main/js/components/common/StatusIndicator.css?f495","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/apps/system/styles.css","webpack:///./src/main/js/apps/system/styles.css?a385","webpack:///./node_modules/lodash/each.js","webpack:///./src/main/js/apps/system/components/info-items/HealthCauseItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthItem.tsx","webpack:///./src/main/js/apps/system/utils.ts","webpack:///./src/main/js/apps/system/components/info-items/SysInfoItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/Section.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCard.tsx","webpack:///./src/main/js/apps/system/components/ClusterSysInfos.tsx","webpack:///./src/main/js/apps/system/components/ChangeLogLevelForm.tsx","webpack:///./src/main/js/apps/system/components/PageActions.tsx","webpack:///./src/main/js/apps/system/components/PageHeader.tsx","webpack:///./src/main/js/apps/system/components/StandaloneSysInfos.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeIntermediate.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeItem.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeForm.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeNotif.tsx","webpack:///./src/main/js/apps/system/components/App.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./node_modules/lodash/map.js","webpack:///./src/main/js/components/icons-components/ChevronRightcon.tsx","webpack:///./node_modules/lodash/groupBy.js","webpack:///./src/main/js/components/icons-components/AlertSuccessIcon.tsx","webpack:///./src/main/js/components/icons-components/AlertErrorIcon.tsx","webpack:///./src/main/js/components/icons-components/ChevronDownIcon.tsx","webpack:///./src/main/js/components/icons-components/OpenCloseIcon.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./node_modules/lodash/_castFunction.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/forEach.js","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./src/main/js/components/common/RestartForm.tsx"],"names":["module","exports","__webpack_require__","push","i","content","options","hmr","transform","insertInto","undefined","locals","StatusIndicator","_a","className","color","size","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1__","small-status-indicator","big-status-indicator","HealthCauseItem","health","healthCause","index_js_exposed","classnames","system","RED","HealthItem","biggerHealth","name","healthCauses","hasHealthCauses","length","GREEN","statusIndicator","toLowerCase","map","cause","idx","key","Tooltip","overlay","Object","l10n","LOGS_LEVELS","HA_FIELD","HEALTH_FIELD","HEALTHCAUSES_FIELD","PLUGINS_FIELD","SETTINGS_FIELD","ignoreInfoFields","sysInfoObject","omit_default","getHealth","getHealthCauses","getLogsLevel","sortBy_default","logLevel","indexOf","getAppNodes","sysInfoData","isCluster","getNodeName","nodeInfo","getSystemData","statData","statistics","measures","__assign","parseQuery","memoize_default","urlQuery","expandedCards","helpers_query","expand","serializeQuery","query","SysInfoItem","value","Array","JSON","stringify","SysInfoItem_typeof","BooleanItem","ObjectItem","AlertSuccessIcon","AlertErrorIcon","map_default","Section","items","id","style","wordBreak","HealthCard","onClick","open","_b","mainSection","sections","each_default","item","_typeof","groupSections","showFields","keys","showSections","showLogLevelWarning","BoxedGroupAccordion","data","renderHeader","title","section","ClusterSysInfos","toggleCard","includes","getClusterMainCardSection","node","getSearchNodes","_super","ChangeLogLevelForm","props","_this","call","this","handleFormSubmit","event","preventDefault","newLevel","state","updating","setState","then","onChange","handleLevelChange","currentTarget","__extends","prototype","render","header","Modal","contentLabel","onRequestClose","onClose","onSubmit","level","checked","type","htmlFor","infoMsg","buttons","disabled","PageActions","handleLogsLevelOpen","openLogsLevelForm","handleLogsLevelChange","onLogLevelChange","handleLogsLevelClose","handleServerRestartOpen","openRestartForm","handleServerRestartClose","removeElementFocus","blur","PageActions_extends","componentWillReceiveProps","nextProps","suffix","now","infoUrl","urls","logsUrl","canDownloadLogs","Dropdown","download","href","target","DropdownIcon","serverId","Date","getFullYear","getMonth","getDate","getHours","getMinutes","canRestart","RestartForm","components_ChangeLogLevelForm","cluster","PageHeader","showActions","components_PageActions","loading","StandAloneSysInfos","omitBy_default","startsWith","getStandaloneMainSections","Web","pickBy_default","_","Compute Engine","Search Engine","getStandaloneSecondarySections","SystemUpgradeIntermediate","apply","arguments","showMore","toggleIntermediatVersions","stopPropagation","SystemUpgradeIntermediate_extends","upgrades","turned","upgrade","version","DateFormatter","date","releaseDate","long","formattedDate","changeLogUrl","description","SystemUpgradeItem","systemUpgrades","lastUpgrade","index_es","defaultMessage","values","system_upgrade_SystemUpgradeIntermediate","slice","downloadUrl","SystemUpgradeForm","upgrading","handleCancelClick","SystemUpgradeForm_extends","SystemUpgradeNotif","mounted","openSystemUpgradeForm","fetchSystemUpgrade","groupedVersions","groupBy_default","split","Number","groupUpgrades","sortUpgrades","handleOpenSystemUpgradeForm","handleCloseSystemUpgradeForm","SystemUpgradeNotif_extends","componentDidMount","componentWillUnmount","system_upgrade_SystemUpgradeForm","App_App","App","fetchSysInfo","toggleSysInfoCards","toggledCard","location","filter","card","concat","updateQuery","newQuery","App_assign","context","router","replace","pathname","App_extends","renderSysInfo","Suggestions","suggestions","Helmet_default","a","system_upgrade_SystemUpgradeNotif","defaultLevel","logLevels","getSystemLogsLevel","getServerId","contextTypes","prop_types","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-medium","medium","modal-large","large","isOpen","overlayClassName","addSuggestions","componentDidUpdate","prevProps","removeSuggestions","prop_types__WEBPACK_IMPORTED_MODULE_1__","isRequired","formatterOption","year","month","day","longFormatterOption","children","react_intl__WEBPACK_IMPORTED_MODULE_1__","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","arrayMap","baseIteratee","baseMap","isArray","collection","iteratee","_Icon__WEBPACK_IMPORTED_MODULE_1__","ChevronRightIcon","fill","d","baseAssignValue","createAggregator","hasOwnProperty","groupBy","result","_app_theme__WEBPACK_IMPORTED_MODULE_2__","ChevronDownIcon","Icon","OpenCloseIcon","__rest","ChevronRightcon","HealthType","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","setLogLevel","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","POLLING_INTERVAL","promiseStatus","Promise","resolve","pollStatus","cb","setTimeout","r","status","restartAndWait","array","index","arrayEach","baseEach","castFunction","hoveringInner","handleClick","onDetailEnter","onDetailLeave","no-hover","role","_icons_components_OpenCloseIcon__WEBPACK_IMPORTED_MODULE_2__","onMouseEnter","onMouseLeave","restarting","_api_system__WEBPACK_IMPORTED_MODULE_2__","document","reload","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","_controls_Modal__WEBPACK_IMPORTED_MODULE_3__","text-center","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"js/289.8441dfef.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".status-indicator{display:inline-block;box-sizing:border-box;width:16px;height:16px;border-radius:16px;margin:4px}.status-indicator.small-status-indicator{width:8px;height:8px;border-radius:8px;margin:8px}.status-indicator.big-status-indicator{width:24px;height:24px;border-radius:24px;margin:0}.status-indicator.red{background-color:#d4333f}.status-indicator.yellow{background-color:#eabe06}.status-indicator.green{background-color:#0a0}.status-indicator.orange{background-color:#ed7d20}.status-indicator.gray{background-color:#b4b4b4}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./StatusIndicator.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./StatusIndicator.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./StatusIndicator.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".system-info-health-title{margin-top:24px;margin-bottom:16px}.system-info-health-info{margin-top:-12px}.system-info-health-info .status-indicator{position:relative;top:8px}.system-info-health-info .alert{display:inline-block}.system-info-health-info.no-margin .status-indicator{margin:0}.system-info-section~.system-info-section{margin-top:16px}.system-info-section-item-name{width:25vw;overflow:hidden;text-overflow:ellipsis}.system-upgrade-version{padding:8px}.system-upgrade-version~.system-upgrade-version{margin-top:10px;padding-top:18px;border-top:1px solid #e6e6e6}.system-upgrade-intermediate{padding:6px 10px}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = require('./forEach');\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { HealthType } from '../../../../api/system';\n\ninterface Props {\n  className?: string;\n  health: HealthType;\n  healthCause: string;\n}\n\nexport default function HealthCauseItem({ className, health, healthCause }: Props) {\n  return (\n    <span\n      className={classNames(\n        'alert',\n        health === HealthType.RED ? 'alert-danger' : 'alert-warning',\n        className\n      )}>\n      {healthCause}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport HealthCauseItem from './HealthCauseItem';\nimport StatusIndicator from '../../../../components/common/StatusIndicator';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport { HealthType } from '../../../../api/system';\nimport { translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  name?: string;\n  className?: string;\n  health: HealthType;\n  healthCauses?: string[];\n}\n\nexport default function HealthItem({ biggerHealth, className, name, health, healthCauses }: Props) {\n  const hasHealthCauses = healthCauses && healthCauses.length > 0 && health !== HealthType.GREEN;\n  const statusIndicator = (\n    <StatusIndicator color={health.toLowerCase()} size={biggerHealth ? 'big' : undefined} />\n  );\n  return (\n    <div className={classNames('system-info-health-info', className)}>\n      {hasHealthCauses &&\n        healthCauses!.map((cause, idx) => (\n          <HealthCauseItem className=\"spacer-right\" health={health} healthCause={cause} key={idx} />\n        ))}\n      {name ? (\n        <Tooltip overlay={translateWithParameters('system.current_health_of_x', name)}>\n          <span>{statusIndicator}</span>\n        </Tooltip>\n      ) : (\n        statusIndicator\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsString,\n  RawQuery,\n  serializeStringArray\n} from '../../helpers/query';\nimport {\n  ClusterSysInfo,\n  HealthType,\n  NodeInfo,\n  SysInfo,\n  SysInfoSection,\n  SysValueObject,\n  SystemUpgrade\n} from '../../api/system';\nimport { formatMeasure } from '../../helpers/measures';\n\nexport interface Query {\n  expandedCards: string[];\n}\n\nexport const LOGS_LEVELS = ['INFO', 'DEBUG', 'TRACE'];\nexport const HA_FIELD = 'High Availability';\nexport const HEALTH_FIELD = 'Health';\nexport const HEALTHCAUSES_FIELD = 'Health Causes';\nexport const PLUGINS_FIELD = 'Plugins';\nexport const SETTINGS_FIELD = 'Settings';\n\nexport function ignoreInfoFields(sysInfoObject: SysValueObject): SysValueObject {\n  return omit(sysInfoObject, [\n    HEALTH_FIELD,\n    HEALTHCAUSES_FIELD,\n    'Name',\n    PLUGINS_FIELD,\n    SETTINGS_FIELD\n  ]) as SysValueObject;\n}\n\nexport function getHealth(sysInfoObject: SysValueObject): HealthType {\n  return sysInfoObject[HEALTH_FIELD] as HealthType;\n}\n\nexport function getHealthCauses(sysInfoObject: SysValueObject): string[] {\n  return sysInfoObject[HEALTHCAUSES_FIELD] as string[];\n}\n\nexport function getLogsLevel(sysInfoObject?: SysValueObject): string {\n  if (!sysInfoObject) {\n    return LOGS_LEVELS[0];\n  }\n  if (sysInfoObject['Web Logging'] || sysInfoObject['Compute Engine Logging']) {\n    return sortBy(\n      [\n        getLogsLevel((sysInfoObject as NodeInfo)['Web Logging']),\n        getLogsLevel((sysInfoObject as NodeInfo)['Compute Engine Logging'])\n      ],\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    )[1];\n  }\n  if (sysInfoObject['System']) {\n    return getLogsLevel((sysInfoObject as SysInfo)['System']);\n  }\n  return (sysInfoObject['Logs Level'] || LOGS_LEVELS[0]) as string;\n}\n\nexport function getAppNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Application Nodes'];\n}\n\nexport function getSearchNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Search Nodes'];\n}\n\nexport function isCluster(sysInfoData?: SysInfo): boolean {\n  return (\n    sysInfoData !== undefined && sysInfoData['System'] && sysInfoData['System'][HA_FIELD] === true\n  );\n}\n\nexport function getServerId(sysInfoData?: SysInfo): string | undefined {\n  return sysInfoData && sysInfoData['System']['Server ID'];\n}\n\nexport function getSystemLogsLevel(sysInfoData?: SysInfo): string {\n  const defaultLevel = LOGS_LEVELS[0];\n  if (!sysInfoData) {\n    return defaultLevel;\n  }\n  if (isCluster(sysInfoData)) {\n    const logLevels = sortBy(\n      getAppNodes(sysInfoData as ClusterSysInfo).map(getLogsLevel),\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    );\n    return logLevels.length > 0 ? logLevels[logLevels.length - 1] : defaultLevel;\n  } else {\n    return getLogsLevel(sysInfoData);\n  }\n}\n\nexport function getNodeName(nodeInfo: NodeInfo): string {\n  return nodeInfo['Name'];\n}\n\nfunction getSystemData(sysInfoData: SysInfo): SysValueObject {\n  const statData: SysValueObject = {};\n  const statistics = sysInfoData['Statistics'] as SysValueObject;\n  if (statistics) {\n    statData['Lines of Code'] = formatMeasure(statistics['ncloc'] as number, 'INT');\n  }\n  return { ...sysInfoData['System'], ...statData };\n}\n\nexport function getClusterMainCardSection(sysInfoData: ClusterSysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omit(sysInfoData, [\n      'Application Nodes',\n      PLUGINS_FIELD,\n      'Search Nodes',\n      SETTINGS_FIELD,\n      'Statistics',\n      'System'\n    ]) as SysValueObject)\n  };\n}\n\nexport function getStandaloneMainSections(sysInfoData: SysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omitBy(\n      sysInfoData,\n      (value, key) =>\n        value == null ||\n        [PLUGINS_FIELD, SETTINGS_FIELD, 'Statistics', 'System'].includes(key) ||\n        key.startsWith('Compute Engine') ||\n        key.startsWith('Search') ||\n        key.startsWith('Web')\n    ) as SysValueObject)\n  };\n}\n\nexport function getStandaloneSecondarySections(sysInfoData: SysInfo): SysInfoSection {\n  return {\n    Web: pickBy(sysInfoData, (_, key) => key.startsWith('Web')) as SysValueObject,\n    'Compute Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith('Compute Engine')\n    ) as SysValueObject,\n    'Search Engine': pickBy(sysInfoData, (_, key) => key.startsWith('Search')) as SysValueObject\n  };\n}\n\nexport function getFileNameSuffix(suffix?: string) {\n  const now = new Date();\n  return (\n    `${suffix ? suffix + '-' : ''}` +\n    `${now.getFullYear()}-${now.getMonth() + 1}-` +\n    `${now.getDate()}-${now.getHours()}-${now.getMinutes()}`\n  );\n}\n\nexport function groupSections(sysInfoData: SysValueObject) {\n  const mainSection: SysValueObject = {};\n  const sections: SysInfoSection = {};\n  each(sysInfoData, (item, key) => {\n    if (typeof item !== 'object' || item instanceof Array) {\n      mainSection[key] = item;\n    } else {\n      sections[key] = item;\n    }\n  });\n  return { mainSection, sections };\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: RawQuery): Query => ({\n    expandedCards: parseAsArray(urlQuery.expand, parseAsString)\n  })\n);\n\nexport const serializeQuery = memoize(\n  (query: Query): RawQuery =>\n    cleanQuery({\n      expand: serializeStringArray(query.expandedCards)\n    })\n);\n\nexport function sortUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[] {\n  return sortBy(upgrades, [\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[0]),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)\n  ]);\n}\n\nexport function groupUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[][] {\n  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);\n  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));\n  return sortedMajor.map(key => groupedVersions[key]);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport AlertErrorIcon from '../../../../components/icons-components/AlertErrorIcon';\nimport AlertSuccessIcon from '../../../../components/icons-components/AlertSuccessIcon';\nimport { HealthType, SysValue, SysValueObject } from '../../../../api/system';\nimport { HEALTH_FIELD } from '../../utils';\n\ninterface Props {\n  name: string;\n  value: SysValue;\n}\n\nexport default function SysInfoItem({ name, value }: Props): JSX.Element {\n  if (name === HEALTH_FIELD || name === 'State') {\n    return <HealthItem className=\"no-margin\" health={value as HealthType} />;\n  }\n  if (value instanceof Array) {\n    return <code>{JSON.stringify(value)}</code>;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      return <BooleanItem value={value as boolean} />;\n    case 'object':\n      return <ObjectItem value={value as SysValueObject} />;\n    default:\n      return <code>{value}</code>;\n  }\n}\n\nfunction BooleanItem({ value }: { value: boolean }) {\n  if (value) {\n    return <AlertSuccessIcon />;\n  } else {\n    return <AlertErrorIcon />;\n  }\n}\n\nfunction ObjectItem({ value }: { value: SysValueObject }) {\n  return (\n    <table className=\"data\">\n      <tbody>\n        {map(value, (value, name) => (\n          <tr key={name}>\n            <td className=\"thin nowrap\">{name}</td>\n            <td>\n              <SysInfoItem name={name} value={value} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport SysInfoItem from './SysInfoItem';\nimport { SysValueObject } from '../../../../api/system';\n\ninterface Props {\n  name?: string;\n  items: SysValueObject;\n}\n\nexport default function Section({ name, items }: Props) {\n  return (\n    <div className=\"system-info-section\">\n      {name && <h4 className=\"spacer-bottom\">{name}</h4>}\n      <table className=\"data zebra\" id={name}>\n        <tbody>\n          {map(items, (value, name) => {\n            return (\n              <tr key={name}>\n                <td className=\"thin\">\n                  <div className=\"system-info-section-item-name\">{name}</div>\n                </td>\n                <td style={{ wordBreak: 'break-all' }}>\n                  <SysInfoItem name={name} value={value} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport Section from './Section';\nimport BoxedGroupAccordion from '../../../../components/controls/BoxedGroupAccordion';\nimport { HealthType, SysValueObject } from '../../../../api/system';\nimport { LOGS_LEVELS, groupSections, getLogsLevel } from '../../utils';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  health?: HealthType;\n  healthCauses?: string[];\n  onClick: (toggledCard: string) => void;\n  open: boolean;\n  name: string;\n  sysInfoData: SysValueObject;\n}\n\nexport default function HealthCard({\n  biggerHealth,\n  health,\n  healthCauses,\n  onClick,\n  open,\n  name,\n  sysInfoData\n}: Props) {\n  const { mainSection, sections } = groupSections(sysInfoData);\n  const showFields = open && mainSection && Object.keys(mainSection).length > 0;\n  const showSections = open && sections;\n  const logLevel = getLogsLevel(sysInfoData);\n  const showLogLevelWarning = logLevel && logLevel !== LOGS_LEVELS[0];\n  return (\n    <BoxedGroupAccordion\n      data={name}\n      onClick={onClick}\n      open={open}\n      renderHeader={() => (\n        <>\n          {showLogLevelWarning && (\n            <span className=\"alert alert-danger spacer-left\">\n              {translate('system.log_level.warning.short')}\n            </span>\n          )}\n          {health && (\n            <HealthItem\n              biggerHealth={biggerHealth}\n              className=\"pull-right\"\n              health={health}\n              healthCauses={healthCauses}\n              name={name}\n            />\n          )}\n        </>\n      )}\n      title={name}>\n      {showFields && <Section items={mainSection} />}\n      {showSections &&\n        map(sections, (section, name) => <Section items={section} key={name} name={name} />)}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo } from '../../../api/system';\nimport {\n  getAppNodes,\n  getHealth,\n  getHealthCauses,\n  getClusterMainCardSection,\n  getNodeName,\n  getSearchNodes,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: ClusterSysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function ClusterSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getClusterMainCardSection(sysInfoData))}\n      />\n      <li className=\"note system-info-health-title\">\n        {translate('system.application_nodes_title')}\n      </li>\n      {sortBy(getAppNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n      <li className=\"note system-info-health-title\">{translate('system.search_nodes_title')}</li>\n      {sortBy(getSearchNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { LOGS_LEVELS } from '../utils';\nimport { setLogLevel } from '../../../api/system';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  infoMsg: string;\n  logLevel: string;\n  onChange: (level: string) => void;\n  onClose: () => void;\n}\n\ninterface State {\n  newLevel: string;\n  updating: boolean;\n}\n\nexport default class ChangeLogLevelForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { newLevel: props.logLevel, updating: false };\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newLevel } = this.state;\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n      setLogLevel(newLevel).then(\n        () => this.props.onChange(newLevel),\n        () => this.setState({ updating: false })\n      );\n    }\n  };\n\n  handleLevelChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    this.setState({ newLevel: event.currentTarget.value });\n\n  render() {\n    const { updating, newLevel } = this.state;\n    const header = translate('system.set_log_level');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"set-log-level-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            {LOGS_LEVELS.map(level => (\n              <p className=\"spacer-bottom\" key={level}>\n                <input\n                  checked={level === newLevel}\n                  className=\"spacer-right text-middle\"\n                  id={`loglevel-${level}`}\n                  name=\"system.log_levels\"\n                  onChange={this.handleLevelChange}\n                  type=\"radio\"\n                  value={level}\n                />\n                <label className=\"text-middle\" htmlFor={`loglevel-${level}`}>\n                  {level}\n                </label>\n              </p>\n            ))}\n            <div className=\"alert alert-info spacer-top\">{this.props.infoMsg}</div>\n            {newLevel !== 'INFO' && (\n              <div className=\"alert alert-danger spacer-top\">\n                {translate('system.log_level.warning')}\n              </div>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {updating && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={updating} id=\"set-log-level-submit\">\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink id=\"set-log-level-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChangeLogLevelForm from './ChangeLogLevelForm';\nimport RestartForm from '../../../components/common/RestartForm';\nimport { getFileNameSuffix } from '../utils';\nimport Dropdown from '../../../components/controls/Dropdown';\nimport { EditButton, Button } from '../../../components/ui/buttons';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\nimport DropdownIcon from '../../../components/icons-components/DropdownIcon';\n\ninterface Props {\n  canDownloadLogs: boolean;\n  canRestart: boolean;\n  cluster: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n}\n\ninterface State {\n  logLevel: string;\n  openLogsLevelForm: boolean;\n  openRestartForm: boolean;\n}\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logLevel: props.logLevel,\n      openLogsLevelForm: false,\n      openRestartForm: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.logLevel !== this.state.logLevel) {\n      this.setState({ logLevel: nextProps.logLevel });\n    }\n  }\n\n  handleLogsLevelOpen = () => {\n    this.setState({ openLogsLevelForm: true });\n  };\n\n  handleLogsLevelChange = (logLevel: string) => {\n    this.setState({ logLevel });\n    this.props.onLogLevelChange();\n    this.handleLogsLevelClose();\n  };\n\n  handleLogsLevelClose = () => {\n    this.setState({ openLogsLevelForm: false });\n  };\n\n  handleServerRestartOpen = () => {\n    this.setState({ openRestartForm: true });\n  };\n\n  handleServerRestartClose = () => {\n    this.setState({ openRestartForm: false });\n  };\n\n  removeElementFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.currentTarget.blur();\n  };\n\n  render() {\n    const infoUrl = getBaseUrl() + '/api/system/info';\n    const logsUrl = getBaseUrl() + '/api/system/logs';\n    return (\n      <div className=\"page-actions\">\n        <span>\n          <span className=\"text-middle\">\n            {translate('system.logs_level')}\n            {':'}\n            <strong className=\"little-spacer-left\">{this.state.logLevel}</strong>\n          </span>\n          <EditButton\n            className=\"spacer-left button-small\"\n            id=\"edit-logs-level-button\"\n            onClick={this.handleLogsLevelOpen}\n          />\n        </span>\n        {this.props.canDownloadLogs && (\n          <Dropdown\n            className=\"display-inline-block spacer-left\"\n            overlay={\n              <ul className=\"menu\">\n                <li>\n                  <a\n                    download=\"sonarqube_app.log\"\n                    href={logsUrl + '?process=app'}\n                    id=\"logs-link\"\n                    target=\"_blank\">\n                    Main Process\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_ce.log\"\n                    href={logsUrl + '?process=ce'}\n                    id=\"ce-logs-link\"\n                    target=\"_blank\">\n                    Compute Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_es.log\"\n                    href={logsUrl + '?process=es'}\n                    id=\"es-logs-link\"\n                    target=\"_blank\">\n                    Search Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_web.log\"\n                    href={logsUrl + '?process=web'}\n                    id=\"web-logs-link\"\n                    target=\"_blank\">\n                    Web Server\n                  </a>\n                </li>\n              </ul>\n            }>\n            <Button>\n              {translate('system.download_logs')}\n              <DropdownIcon className=\"little-spacer-left\" />\n            </Button>\n          </Dropdown>\n        )}\n        <a\n          className=\"button spacer-left\"\n          download={`sonarqube-support-info-${getFileNameSuffix(this.props.serverId)}.json`}\n          href={infoUrl}\n          id=\"download-link\"\n          onClick={this.removeElementFocus}\n          target=\"_blank\">\n          {translate('system.download_system_info')}\n        </a>\n        {this.props.canRestart && (\n          <Button\n            className=\"spacer-left\"\n            id=\"restart-server-button\"\n            onClick={this.handleServerRestartOpen}>\n            {translate('system.restart_server')}\n          </Button>\n        )}\n        {this.props.canRestart &&\n          this.state.openRestartForm && <RestartForm onClose={this.handleServerRestartClose} />}\n        {this.state.openLogsLevelForm && (\n          <ChangeLogLevelForm\n            infoMsg={translate(\n              this.props.cluster ? 'system.cluster_log_level.info' : 'system.log_level.info'\n            )}\n            logLevel={this.state.logLevel}\n            onChange={this.handleLogsLevelChange}\n            onClose={this.handleLogsLevelClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PageActions from './PageActions';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  isCluster: boolean;\n  loading: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n  showActions: boolean;\n}\n\nexport default function PageHeader(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('system_info.page')}</h1>\n      {props.showActions && (\n        <PageActions\n          canDownloadLogs={!props.isCluster}\n          canRestart={!props.isCluster}\n          cluster={props.isCluster}\n          logLevel={props.logLevel}\n          onLogLevelChange={props.onLogLevelChange}\n          serverId={props.serverId}\n        />\n      )}\n      {props.loading && (\n        <div className=\"page-actions\">\n          <i className=\"spinner\" />\n        </div>\n      )}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { SysInfo } from '../../../api/system';\nimport {\n  getHealth,\n  getHealthCauses,\n  getStandaloneMainSections,\n  getStandaloneSecondarySections,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: SysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function StandAloneSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getStandaloneMainSections(sysInfoData))}\n      />\n      {map(getStandaloneSecondarySections(sysInfoData), (section, name) => (\n        <HealthCard\n          key={name}\n          name={name}\n          onClick={toggleCard}\n          open={expandedCards.includes(name)}\n          sysInfoData={ignoreInfoFields(section)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  upgrades: SystemUpgrade[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class SystemUpgradeIntermediate extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleIntermediatVersions = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const { upgrades } = this.props;\n    if (upgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <a\n          className=\"button-link little-spacer-bottom\"\n          href=\"#\"\n          onClick={this.toggleIntermediatVersions}>\n          {showMore\n            ? translate('system.hide_intermediate_versions')\n            : translate('system.show_intermediate_versions')}\n          <DropdownIcon className=\"little-spacer-left\" turned={showMore} />\n        </a>\n        {showMore &&\n          upgrades.map(upgrade => (\n            <div className=\"note system-upgrade-intermediate\" key={upgrade.version}>\n              <DateFormatter date={upgrade.releaseDate} long={true}>\n                {formattedDate => (\n                  <p>\n                    <b className=\"little-spacer-right\">SonarQube {upgrade.version}</b>\n                    {formattedDate}\n                    {upgrade.changeLogUrl && (\n                      <a className=\"spacer-left\" href={upgrade.changeLogUrl} target=\"_blank\">\n                        {translate('system.release_notes')}\n                      </a>\n                    )}\n                  </p>\n                )}\n              </DateFormatter>\n              <p className=\"little-spacer-top\">{upgrade.description}</p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SystemUpgradeIntermediate from './SystemUpgradeIntermediate';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  type?: string;\n  systemUpgrades: SystemUpgrade[];\n}\n\nexport default function SystemUpgradeItem({ type, systemUpgrades }: Props) {\n  const lastUpgrade = systemUpgrades[0];\n  return (\n    <div className=\"system-upgrade-version\">\n      {type && (\n        <h1 className=\"spacer-bottom\">\n          <strong>{type}</strong>\n        </h1>\n      )}\n      <p>\n        <FormattedMessage\n          defaultMessage={translate('system.version_is_availble')}\n          id=\"system.version_is_availble\"\n          values={{ version: <b>SonarQube {lastUpgrade.version}</b> }}\n        />\n      </p>\n      <p className=\"spacer-top\">{lastUpgrade.description}</p>\n      <div className=\"big-spacer-top\">\n        <DateFormatter date={lastUpgrade.releaseDate} long={true}>\n          {formattedDate => (\n            <span>{translateWithParameters('system.released_x', formattedDate)}</span>\n          )}\n        </DateFormatter>\n        {lastUpgrade.changeLogUrl && (\n          <a className=\"spacer-left\" href={lastUpgrade.changeLogUrl} target=\"_blank\">\n            {translate('system.release_notes')}\n          </a>\n        )}\n      </div>\n      <SystemUpgradeIntermediate className=\"spacer-top\" upgrades={systemUpgrades.slice(1)} />\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"button\"\n          download={`sonarqube-${lastUpgrade.version}.zip`}\n          href={lastUpgrade.downloadUrl}\n          target=\"blank\">\n          {translateWithParameters('system.download_x', lastUpgrade.version)}\n        </a>\n        <a\n          className=\"spacer-left\"\n          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n          target=\"_blank\">\n          {translate('system.how_to_upgrade')}\n        </a>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeItem from './SystemUpgradeItem';\nimport { SystemUpgrade } from '../../../../api/system';\nimport Modal from '../../../../components/controls/Modal';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  systemUpgrades: SystemUpgrade[][];\n  onClose: () => void;\n}\n\ninterface State {\n  upgrading: boolean;\n}\n\nexport default class SystemUpgradeForm extends React.PureComponent<Props, State> {\n  state: State = { upgrading: false };\n\n  handleCancelClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onClose();\n  };\n\n  render() {\n    const { upgrading } = this.state;\n    const { systemUpgrades } = this.props;\n    const header = translate('system.system_upgrade');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <div className=\"modal-body\">\n          {systemUpgrades.map((upgrades, idx) => (\n            <SystemUpgradeItem\n              key={upgrades[upgrades.length - 1].version}\n              systemUpgrades={upgrades}\n              type={\n                idx === 0 ? translate('system.latest_version') : translate('system.lts_version')\n              }\n            />\n          ))}\n        </div>\n        <div className=\"modal-foot\">\n          {upgrading && <i className=\"spinner spacer-right\" />}\n          <a className=\"pull-left\" href=\"https://www.sonarqube.org/downloads/\" target=\"_blank\">\n            {translate('system.see_sonarqube_downloads')}\n          </a>\n          <a href=\"#\" onClick={this.handleCancelClick}>\n            {translate('cancel')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeForm from './SystemUpgradeForm';\nimport { sortUpgrades, groupUpgrades } from '../../utils';\nimport { getSystemUpgrades, SystemUpgrade } from '../../../../api/system';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface State {\n  systemUpgrades: SystemUpgrade[][];\n  openSystemUpgradeForm: boolean;\n}\n\nexport default class SystemUpgradeNotif extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { openSystemUpgradeForm: false, systemUpgrades: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSystemUpgrade();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSystemUpgrade = () =>\n    getSystemUpgrades().then(\n      ({ upgrades }) => {\n        if (this.mounted) {\n          this.setState({ systemUpgrades: groupUpgrades(sortUpgrades(upgrades)) });\n        }\n      },\n      () => {}\n    );\n\n  handleOpenSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: true });\n  };\n\n  handleCloseSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: false });\n  };\n\n  render() {\n    const { systemUpgrades } = this.state;\n\n    if (systemUpgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"page-notifs\">\n        <div className=\"alert alert-info\">\n          {translate('system.new_version_available')}\n          <Button className=\"spacer-left\" onClick={this.handleOpenSystemUpgradeForm}>\n            {translate('learn_more')}\n          </Button>\n        </div>\n        {this.state.openSystemUpgradeForm && (\n          <SystemUpgradeForm\n            onClose={this.handleCloseSystemUpgradeForm}\n            systemUpgrades={systemUpgrades}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport ClusterSysInfos from './ClusterSysInfos';\nimport PageHeader from './PageHeader';\nimport StandaloneSysInfos from './StandaloneSysInfos';\nimport SystemUpgradeNotif from './system-upgrade/SystemUpgradeNotif';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo, getSystemInfo, SysInfo } from '../../../api/system';\nimport {\n  getServerId,\n  getSystemLogsLevel,\n  isCluster,\n  parseQuery,\n  Query,\n  serializeQuery\n} from '../utils';\nimport { RawQuery } from '../../../helpers/query';\nimport '../styles.css';\n\ninterface Props {\n  location: { pathname: string; query: RawQuery };\n}\n\ninterface State {\n  loading: boolean;\n  sysInfoData?: SysInfo;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { loading: true };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSysInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSysInfo = () => {\n    this.setState({ loading: true });\n    getSystemInfo().then(\n      (sysInfoData: SysInfo) => {\n        if (this.mounted) {\n          this.setState({ loading: false, sysInfoData });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  toggleSysInfoCards = (toggledCard: string) => {\n    const query = parseQuery(this.props.location.query);\n    let expandedCards;\n    if (query.expandedCards.includes(toggledCard)) {\n      expandedCards = query.expandedCards.filter(card => card !== toggledCard);\n    } else {\n      expandedCards = query.expandedCards.concat(toggledCard);\n    }\n    this.updateQuery({ expandedCards });\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.context.router.replace({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSysInfo() {\n    const { sysInfoData } = this.state;\n    if (!sysInfoData) {\n      return null;\n    }\n\n    const query = parseQuery(this.props.location.query);\n    if (isCluster(sysInfoData)) {\n      return (\n        <ClusterSysInfos\n          expandedCards={query.expandedCards}\n          sysInfoData={sysInfoData as ClusterSysInfo}\n          toggleCard={this.toggleSysInfoCards}\n        />\n      );\n    }\n    return (\n      <StandaloneSysInfos\n        expandedCards={query.expandedCards}\n        sysInfoData={sysInfoData}\n        toggleCard={this.toggleSysInfoCards}\n      />\n    );\n  }\n\n  render() {\n    const { loading, sysInfoData } = this.state;\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"system_info\" />\n        <Helmet title={translate('system_info.page')} />\n        <SystemUpgradeNotif />\n        <PageHeader\n          isCluster={isCluster(sysInfoData)}\n          loading={loading}\n          logLevel={getSystemLogsLevel(sysInfoData)}\n          onLogLevelChange={this.fetchSysInfo}\n          serverId={getServerId(sysInfoData)}\n          showActions={sysInfoData !== undefined}\n        />\n        {this.renderSysInfo()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\ninterface OwnProps {\n  medium?: boolean;\n  large?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & OwnProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', { 'modal-medium': props.medium, 'modal-large': props.large })}\n      isOpen={true}\n      overlayClassName=\"modal-overlay\"\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default class Suggestions extends React.PureComponent<Props> {\n  context!: { suggestions: SuggestionsContext };\n\n  static contextTypes = {\n    suggestions: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    this.context.suggestions.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.context.suggestions.removeSuggestions(this.props.suggestions);\n      this.context.suggestions.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.suggestions.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronRightIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M11.596 8.28l-4.604 4.602a.382.382 0 0 1-.279.118.382.382 0 0 1-.279-.118l-1.03-1.03a.382.382 0 0 1-.117-.278c0-.108.04-.201.117-.28L8.7 8 5.404 4.706a.382.382 0 0 1-.117-.28c0-.108.04-.2.117-.279l1.03-1.03A.382.382 0 0 1 6.714 3c.107 0 .2.04.278.118l4.604 4.603a.382.382 0 0 1 .117.279c0 .108-.04.201-.117.28z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\nimport * as theme from '../../app/theme';\n\nexport default function AlertSuccessIcon({ className, fill = theme.green, size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M12.607 6.554q0-0.25-0.161-0.411l-0.813-0.804q-0.17-0.17-0.402-0.17t-0.402 0.17l-3.643 3.634-2.018-2.018q-0.17-0.17-0.402-0.17t-0.402 0.17l-0.813 0.804q-0.161 0.161-0.161 0.411 0 0.241 0.161 0.402l3.232 3.232q0.17 0.17 0.402 0.17 0.241 0 0.411-0.17l4.848-4.848q0.161-0.161 0.161-0.402zM14.857 8q0 1.866-0.92 3.442t-2.496 2.496-3.442 0.92-3.442-0.92-2.496-2.496-0.92-3.442 0.92-3.442 2.496-2.496 3.442-0.92 3.442 0.92 2.496 2.496 0.92 3.442z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\nimport * as theme from '../../app/theme';\n\nexport default function AlertErrorIcon({ className, fill = theme.red, size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M11.402 10.018q0-0.232-0.17-0.402l-1.616-1.616 1.616-1.616q0.17-0.17 0.17-0.402 0-0.241-0.17-0.411l-0.804-0.804q-0.17-0.17-0.411-0.17-0.232 0-0.402 0.17l-1.616 1.616-1.616-1.616q-0.17-0.17-0.402-0.17-0.241 0-0.411 0.17l-0.804 0.804q-0.17 0.17-0.17 0.411 0 0.232 0.17 0.402l1.616 1.616-1.616 1.616q-0.17 0.17-0.17 0.402 0 0.241 0.17 0.411l0.804 0.804q0.17 0.17 0.411 0.17 0.232 0 0.402-0.17l1.616-1.616 1.616 1.616q0.17 0.17 0.402 0.17 0.241 0 0.411-0.17l0.804-0.804q0.17-0.17 0.17-0.411zM14.857 8q0 1.866-0.92 3.442t-2.496 2.496-3.442 0.92-3.442-0.92-2.496-2.496-0.92-3.442 0.92-3.442 2.496-2.496 3.442-0.92 3.442 0.92 2.496 2.496 0.92 3.442z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IconProps } from './Icon';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightcon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...props }: Props) {\n  return open ? <ChevronDownIcon {...props} /> : <ChevronRightIcon {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport type SysValue = boolean | string | number | HealthType | SysValueObject | SysValueArray;\nexport interface SysValueObject {\n  [key: string]: SysValue;\n}\nexport interface SysValueArray extends Array<SysValue> {}\n\nexport interface SysInfoSection {\n  [sectionName: string]: SysValueObject;\n}\n\nexport enum HealthType {\n  RED = 'RED',\n  YELLOW = 'YELLOW',\n  GREEN = 'GREEN'\n}\n\nexport interface NodeInfo extends SysValueObject {\n  'Compute Engine Logging': { 'Logs Level': string };\n  Health: HealthType;\n  'Health Causes': string[];\n  Name: string;\n  'Web Logging': { 'Logs Level': string };\n}\n\nexport interface SysInfo extends SysValueObject {\n  Health: HealthType;\n  'Health Causes': string[];\n  System: {\n    'High Availability': boolean;\n    'Logs Level': string;\n    'Server ID': string;\n  };\n}\n\nexport interface ClusterSysInfo extends SysInfo {\n  'Application Nodes': NodeInfo[];\n  'Search Nodes': NodeInfo[];\n}\n\nexport interface SystemUpgrade {\n  version: string;\n  description: string;\n  releaseDate: string;\n  changeLogUrl: string;\n  downloadUrl: string;\n  plugins: any;\n}\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<SysInfo> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: string }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nconst POLLING_INTERVAL = 2000;\n\nfunction pollStatus(cb: Function): void {\n  setTimeout(() => {\n    getSystemStatus()\n      .then(r => {\n        if (r.status === 'UP') {\n          cb();\n        } else {\n          pollStatus(cb);\n        }\n      })\n      .catch(() => pollStatus(cb));\n  }, POLLING_INTERVAL);\n}\n\nfunction promiseStatus(): Promise<any> {\n  return new Promise(resolve => pollStatus(resolve));\n}\n\nexport function restartAndWait(): Promise<any> {\n  return restart().then(promiseStatus);\n}\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport OpenCloseIcon from '../icons-components/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { restartAndWait } from '../../api/system';\nimport Modal from '../controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n}\n\ninterface State {\n  restarting: boolean;\n}\n\nexport default class RestartForm extends React.PureComponent<Props, State> {\n  state: State = { restarting: false };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!this.state.restarting) {\n      this.setState({ restarting: true });\n      restartAndWait().then(\n        () => document.location && document.location.reload(),\n        () => this.setState({ restarting: false })\n      );\n    }\n  };\n\n  render() {\n    const { restarting } = this.state;\n    const header = translate('system.restart_server');\n    return (\n      <Modal contentLabel={header} onRequestClose={restarting ? undefined : this.props.onClose}>\n        <form id=\"restart-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <p className={classNames('spacer-top spacer-bottom', { 'text-center': restarting })}>\n              {translate(restarting ? 'system.is_restarting' : 'system.are_you_sure_to_restart')}\n            </p>\n            {restarting && (\n              <p className=\"big-spacer-top spacer-bottom text-center\">\n                <i className=\"spinner\" />\n              </p>\n            )}\n          </div>\n          {!restarting && (\n            <div className=\"modal-foot\">\n              <SubmitButton id=\"restart-server-submit\">{translate('restart')}</SubmitButton>\n              <ResetButtonLink\n                className=\"js-modal-close\"\n                id=\"restart-server-cancel\"\n                onClick={this.props.onClose}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </div>\n          )}\n        </form>\n      </Modal>\n    );\n  }\n}\n"],"sourceRoot":""}