{"version":3,"sources":["webpack:///./src/main/js/components/charts/DonutChart.tsx"],"names":["d3_shape__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","DonutChart","props","height","_a","padding","width","availableWidth","availableHeight","size","Math","min","radius","floor","sectors","Object","sort","value","d","pie","data","map","i","react__WEBPACK_IMPORTED_MODULE_0__","Sector","fill","key","thickness","className","transform","outerRadius","innerRadius","arc","style"],"mappings":"sJAAAA,EAAAC,EAAA,KAmCc,SAAUC,EAAWC,GACzB,IAAAC,EAAAD,EAAAC,OAAQC,EAAAF,EAAAG,eAAA,IAAAD,GAAA,SAAAA,EAAwBE,EAAAJ,EAAAI,MAElCC,EAAiBD,EAAQD,EAAQ,GAAKA,EAAQ,GAC9CG,EAAkBL,EAASE,EAAQ,GAAKA,EAAQ,GAEhDI,EAAOC,KAAKC,IAAIJ,EAAgBC,GAChCI,EAASF,KAAKG,MAAMJ,EAAO,GAM3BK,EAJMC,OAAAhB,EAAA,EAAAgB,GACTC,KAAK,MACLC,MAAM,SAAAC,GAAK,OAAAA,EAAAD,OAEEE,CAAIjB,EAAMkB,MAAMC,IAAI,SAACH,EAAGI,GACtC,OACEC,EAAA,cAACC,GACCJ,KAAMF,EACNO,KAAMvB,EAAMkB,KAAKE,GAAGG,KACpBC,IAAKJ,EACLV,OAAQA,EACRe,UAAWzB,EAAMyB,cAKvB,OACEJ,EAAA,qBAAKK,UAAU,cAAczB,OAAQA,EAAQG,MAAOA,GAClDiB,EAAA,mBAAGM,UAAW,aAAaxB,EAAQ,GAAE,KAAKA,EAAQ,GAAE,KAClDkB,EAAA,mBAAGM,UAAW,aAAajB,EAAM,KAAKA,EAAM,KAAME,KAa1D,SAASU,EAAOtB,GACd,IAGMgB,EAHMH,OAAAhB,EAAA,EAAAgB,GACTe,YAAY5B,EAAMU,QAClBmB,YAAY7B,EAAMU,OAASV,EAAMyB,UAC1BK,CAAI9B,EAAMkB,MACpB,OAAOG,EAAA,sBAAML,EAAGA,EAAGe,OAASR,KAAMvB,EAAMuB","file":"js/283.bfd420fc.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { arc as d3Arc, pie as d3Pie, PieArcDatum } from 'd3-shape';\n\ninterface DataPoint {\n  fill: string;\n  value: number;\n}\n\ninterface Props {\n  data: DataPoint[];\n  height: number;\n  thickness: number;\n  padding?: [number, number, number, number];\n  width: number;\n}\n\nexport default function DonutChart(props: Props) {\n  const { height, padding = [0, 0, 0, 0], width } = props;\n\n  const availableWidth = width - padding[1] - padding[3];\n  const availableHeight = height - padding[0] - padding[2];\n\n  const size = Math.min(availableWidth, availableHeight);\n  const radius = Math.floor(size / 2);\n\n  const pie = d3Pie<any, DataPoint>()\n    .sort(null)\n    .value(d => d.value);\n\n  const sectors = pie(props.data).map((d, i) => {\n    return (\n      <Sector\n        data={d}\n        fill={props.data[i].fill}\n        key={i}\n        radius={radius}\n        thickness={props.thickness}\n      />\n    );\n  });\n\n  return (\n    <svg className=\"donut-chart\" height={height} width={width}>\n      <g transform={`translate(${padding[3]}, ${padding[0]})`}>\n        <g transform={`translate(${radius}, ${radius})`}>{sectors}</g>\n      </g>\n    </svg>\n  );\n}\n\ninterface SectorProps {\n  data: PieArcDatum<DataPoint>;\n  fill: string;\n  radius: number;\n  thickness: number;\n}\n\nfunction Sector(props: SectorProps) {\n  const arc = d3Arc<any, PieArcDatum<DataPoint>>()\n    .outerRadius(props.radius)\n    .innerRadius(props.radius - props.thickness);\n  const d = arc(props.data) as string;\n  return <path d={d} style={{ fill: props.fill }} />;\n}\n"],"sourceRoot":""}